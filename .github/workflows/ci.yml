name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUN_VERSION: 'latest'

jobs:
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ./.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Install dependencies
        run: |
          if [ -f bun.lock ]; then
            bun install --frozen-lockfile
          else
            echo "⚠️ No bun.lock found — installing without frozen lockfile"
            bun install
          fi

      - name: Run Prettier
        run: bun run prettier --check .

      - name: Run ESLint
        run: bun run eslint .

  tests:
    name: Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ env.BUN_VERSION }}

      - name: Cache Bun dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            ./.bun
          key: ${{ runner.os }}-bun-${{ hashFiles('bun.lock') }}
          restore-keys: ${{ runner.os }}-bun-

      - name: Install dependencies
        run: |
          if [ -f bun.lock ]; then
            bun install --frozen-lockfile
          else
            echo "⚠️ No bun.lock found — installing without frozen lockfile"
            bun install
          fi

      - name: Run unit tests
        run: bun run test:unit
